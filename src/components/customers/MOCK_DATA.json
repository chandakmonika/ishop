/import React, { useEffect, useState } from "react";
import axios from "axios";
import Button from "react-bootstrap/Button";
import Container from "react-bootstrap/Container";
import Nav from "react-bootstrap/Nav";
import Navbar from "react-bootstrap/Navbar";
import "./Customer_Customerlist.css";
import { Link } from "react-router-dom";
//import { Pagination } from "antd";
import TablePagination from "@mui/material/TablePagination";

export default function Customer_Customerlist() {
const [clist, setClist] = useState([]);
const [query, setQuery] = useState({ text: "" });
const [order, setOrder] = useState("ASC");
const url = "http://admin.ishop.sunhimlabs.com/api/v1/customer/list";
//console.log(query);
const handleChange = (e) => {
setQuery({ text: e.target.value });
};
const handleSubmit = (e) => {
e.preventDefault();
axios.get(`${url}/?q=${query.text}`).then((res) => setClist(res.data.data));
};
const [page, setPage] = useState([]);
const getData = async () => {
try {
const res = await axios.get(`${url}`);
const { data, pages } = res.data;

setClist(data);
setPage(pages);
} catch (error) {
console.log(error);
}
};
useEffect(() => {
getData();
}, []);

//console.log(page);
const updateNameWise = async (e) => {
e.preventDefault();
order === "ASC" ? setOrder("DESC") : setOrder("ASC");
const res = await axios.get(`${url}?sort_by=first_name&order_by=${order}`);
const { data } = res.data;
setClist(data);
};

const updateEmailWise = async (e) => {
e.preventDefault();
order === "ASC" ? setOrder("DESC") : setOrder("ASC");
const res = await axios.get(`${url}?sort_by=email&order_by=${order}`);
const { data } = res.data;
setClist(data);
};
const updateMobileWise = async (e) => {
e.preventDefault();
order === "ASC" ? setOrder("DESC") : setOrder("ASC");
const res = await axios.get(`${url}?sort_by=phone&order_by=${order}`);
const { data } = res.data;
setClist(data);
};

const handleChangePage = async (e, newPage) => {
setPage(newPage);
try {
const res = await axios.get(`${url}?&page=${newPage + 1}`);
const { data, pages } = res.data;
setClist(data);
setPage(pages);
} catch (error) {
console.log(error);
}
};
return (
<div>
<Navbar expand="lg">
<Container fluid>
<Navbar.Brand href="#">Customer List</Navbar.Brand>
{/* <Navbar.Toggle aria-controls="navbarScroll" /> */}
<Navbar.Collapse id="navbarScroll">
<Nav
className="ml-auto my-4 my-lg-0"
style={{ maxHeight: "100px" }}
navbarScroll
>
<div className="d-flex ml-auto my-2 my-lg-0">
<Button variant="light">Import Customer</Button>
&nbsp;&nbsp;&nbsp;
<Button variant="info">Add Customer</Button>&nbsp;&nbsp;&nbsp;
</div>
&nbsp;&nbsp;&nbsp;
</Nav>
</Navbar.Collapse>
</Container>
</Navbar>
<div class="card" style={{ width: "100%" }}>
<div class="card-body" style={{ width: "100%" }}>
<div class="row">
<div className="col-sm-3">
<form onSubmit={handleSubmit}>
<div class="input-group">
<input
type="text"
name="search"
className="form-control"
id="exampleInputEmail1"
aria-describedby="texthelp"
placeholder="Search this blog"
onChange={handleChange}
/>
<Button variant="info" type="submit">
Search
</Button>
</div>
</form>
</div>
</div>
<br />
<table class="table table-bordered" style={{ width: "95%" }}>
<thead style={{ backgroundColor: "#EBF1F3" }}>
<tr>
<th scope="col">
<div class="custom-control custom-checkbox">
<input
type="checkbox"
class="custom-control-input"
id="customCheck"
checked
/>
<label
class="custom-control-label"
for="customCheck"
></label>
</div>
</th>
<th scope="col">
Customer Name &nbsp;
<i class="fas fa-arrow-down" onClick={updateNameWise}></i>
<i class="fas fa-arrow-up" onClick={updateNameWise}></i>
</th>
<th scope="col">
Mobile Number&nbsp;{" "}
<i class="fas fa-arrow-down" onClick={updateMobileWise}></i>
<i class="fas fa-arrow-up" onClick={updateMobileWise}></i>
</th>
<th scope="col">
Email &nbsp;{" "}
<i class="fas fa-arrow-down" onClick={updateEmailWise}></i>
<i class="fas fa-arrow-up" onClick={updateEmailWise}></i>
</th>
<th scope="col">Orders Place</th>
<th scope="col">Total Sales</th>
<th scope="col">Status</th>
<th scope="col">Address</th>
</tr>
</thead>
<tbody>
{clist.map((item) => {
return (
<tr key={item.id}>
<td>
<div class="custom-control custom-checkbox">
<input type="checkbox" value={item.user_id} />
</div>
</td>
<td>
{item.first_name} {item.last_name}
</td>
<td>{item.phone}</td>
<td>{item.email}</td>
<td></td>
<td></td>
<td>
<button type="button">
{item.status === 0 ? "inactive" : "active"}
</button>
</td>
<td>
<Link to="/customer/address/list">
<i
class="fa fa-address-book"
style={{ fontSize: "24px" }}
></i>
</Link>
&nbsp;&nbsp;
<Link to={`/customer/edit/${item.user_id}`}>
<i class="fas fa-edit" style={{ fontSize: "24px" }}></i>
</Link>
</td>
</tr>
);
})}
</tbody>
</table>
<div className="row">
<form className="row col-md-4">
<div className="col-md-5">
{" "}
<select className="form-control">
<option selected>- select any -</option>
<option value={1}>Active</option>
<option value={0}>Inactive</option>
<option value={2}>Delete</option>
</select>
</div>
<div className="col-md-5">
<button
type="button"
class="btn btn-light"
style={{ width: "8rem" }}
>
Apply
</button>
</div>
</form>
<div className="row col-md-3">
<h6>Pages:</h6>
<p>
&nbsp;
<b style={{ color: "black" }}> {page.current}</b> /{" "}
{page.totalpages}{" "}
</p>
</div>
<TablePagination
className="col-md-5"
component="div"
count={page.totalrecords}
page={page.current - 1}
onPageChange={handleChangePage}
rowsPerPage={page.records_per_page}
/>
</div>

{/* <-------------------------TableEnd----------------------> */}
</div>
</div>
</div>
);
}